using System;
using System.Collections.Generic;
using System.Diagnostics;
using System.Linq;
using System.Text.RegularExpressions;

namespace AoC20
{
	class Program
	{
		static void Main(string[] args)
		{
			var tiles = input.Split("\r\n\r\n", StringSplitOptions.RemoveEmptyEntries);
			Problem1(tiles);
			Problem2(tiles);
			Console.ReadLine();
		}

		static void Problem1(string[] tiles)
		{
			var tileInfo = tiles
				.Select(t => Tile.Parse(t))
				.ToArray();
			var tileIndex = tileInfo
				.ToLookup(t => t.ID);
			var borderGroups = tileInfo
				.SelectMany(t => t.Borders.Select(Border => (t.ID, Border)))	// Get individual edges with tile name and edge index
				.GroupBy(t => t.Border)											// Group by edge hash, keep only inner edges
				.Where(g => g.Count() > 1)
				.SelectMany(g => g)
				.ToLookup(t => t.Border);										// Convert to lookup
			var corners = borderGroups
				.SelectMany(g => g.Select(i => i.ID))							// For all matching edges, get tile name
				.GroupBy(i => i)
				.Where(g => g.Count() == 2)										// Corners will have the least common borders
				.Select(g => g.Key)
				.ToArray();
			var cornerProd = corners
				.Aggregate((long)1, (i, j) => i * j);

			Console.WriteLine("#1: " + cornerProd);
		}

		static void Problem2(string[] tiles)
		{
			var tileInfo = tiles
				.Select(t => Tile.Parse(t))
				.ToArray();
			var tileIndex = tileInfo
				.ToLookup(t => t.ID);
			var borderGroups = tileInfo
				.SelectMany(t => t.Borders.Select(Border => (t.ID, Border)))	// Get individual edges with tile name and edge index
				.GroupBy(t => t.Border)											// Group by edge hash, keep only inner edges
				.Where(g => g.Count() > 1)
				.SelectMany(g => g)
				.ToLookup(t => t.Border);										// Convert to lookup
			var corners = borderGroups
				.SelectMany(g => g.Select(i => i.ID))							// For all matching edges, get tile name
				.GroupBy(i => i)
				.Where(g => g.Count() == 2)										// Corners will have the least common borders
				.Select(g => g.Key)
				.ToArray();
			var fromTile = corners
				.Select(id => tileIndex[id].First())
				.OrderBy(t => t.Body[0] == "#.##...##." ? 0 : 1)
				.First()
				.Flip();

			// Orient the matching edges to right & bottom so it can be at map[0, 0]
			var matchingEdgeIndex = fromTile
				.Borders
				.Where(e => borderGroups.Contains(e))
				.Select(e => Array.IndexOf(fromTile.Borders, e))
				.OrderBy(i => (i - 1 + 4) % 4) // Looking edge closest to 1 from the right, +4 to avoid negatives
				.First();
			fromTile = fromTile.Rotate(RotationsRequired(matchingEdgeIndex, 1));
			var matchingEdge = fromTile.Borders[1];

			// Start in the corner of the map, and look for matching edges
			var tileMap = new Tile[tileInfo.Length , tileInfo.Length];	// Don't know the size, so worse case is 1x#Tiles
			int y = 0;
			int x = 1;
			tileMap[0, 0] = fromTile;
			for (; borderGroups.Contains(matchingEdge); y++)
			{
				// Match top edge of of previous row
				if (y > 0)
				{
					var downTile = tileIndex[borderGroups[matchingEdge].Where(t => t.ID != fromTile.ID).First().ID].First();
					// Go on looking for matching tiles horizontally
					fromTile = downTile.RotateToFace(fromTile, matchingEdge, 0 /* Up */);
					matchingEdge = fromTile.Borders[1 /* Right */];
					tileMap[y, 0] = fromTile;
				}

				for (x = 1; borderGroups.Contains(matchingEdge); x++)
				{
					// From origin tile, find matching tile
					var nextTile = tileIndex[borderGroups[matchingEdge].Where(t => t.ID != fromTile.ID).First().ID].First();
					// Got this tile, so keep looping for the next one in the same direction
					fromTile = nextTile.RotateToFace(fromTile, matchingEdge, 3 /* Left */);
					matchingEdge = fromTile.Borders[1 /* Right */];
					tileMap[y, x] = fromTile;
				}

				// Rewind to first item in row to look for next item down
				fromTile = tileMap[y, 0];
				matchingEdge = fromTile.Borders[2 /* Down */];
			}

			// Generate a tile which includes all bodies stiched, without borders
			int stichHeight = y * (fromTile.Body.Length - 2);
			int stichWidth = x * (fromTile.Body[0].Length - 2);
			var map = new string[stichHeight];
			int my = 0;
			for (int ty = 0; y > ty; ++ty)
			{
				for (int ry = 1; fromTile.Body.Length - 1 > ry; ++ry, ++my)
				{
					map[my] = String.Concat(Enumerable
						.Range(0, x)
						.SelectMany(tx => Enumerable
							.Range(1, fromTile.Body[0].Length - 2)
							.Select(rx => tileMap[ty, tx].Body[ry][rx])));
					Debug.Write(map[my] + "\n");
				}
			}

			// Look for monster pattern
			string monsterPattern1 = "                  # ";
			string monsterPattern2 = "#    ##    ##    ###";
			string monsterPattern3 = " #  #  #  #  #  #   ";
			var monsterRex1 = new Regex(monsterPattern1.Replace(' ', '.'), RegexOptions.Compiled);
			var monsterRex2 = new Regex(monsterPattern2.Replace(' ', '.'), RegexOptions.Compiled);
			var monsterRex3 = new Regex(monsterPattern3.Replace(' ', '.'), RegexOptions.Compiled);
			int fullMatch = 0;
			// If the pattern isn't found directly, try turning the map every which way
			var mapTransforms = new Func<string[], string[]>[]
			{
				(x) => x,
				(x) => RotateStringsClockwise(x),
				(x) => RotateStringsClockwise(x),
				(x) => RotateStringsClockwise(x),
				(x) => FlipStringsHorizontaly(x),
				(x) => RotateStringsClockwise(x),
				(x) => RotateStringsClockwise(x),
				(x) => RotateStringsClockwise(x),
			};
			foreach (var t in mapTransforms)
			{
				map = t(map);

				// Look for center pattern first, it's distinctive enough
				for (my = 1; map.Length - 1 > my; ++my)
				{
					var m2 = monsterRex2.Matches(map[my]);
					foreach (Match m in m2)
					{
						if (!monsterRex1.IsMatch(map[my - 1][m.Index..(m.Index + monsterPattern1.Length)]) ||
							!monsterRex3.IsMatch(map[my + 1][m.Index..(m.Index + monsterPattern3.Length)]))
							continue;
						map[my - 1] = String.Concat(map[my - 1].Select((c, i) => (i - m.Index).IsWithin(monsterPattern1) && monsterPattern1[i - m.Index] == '#' ? 'O' : c));
						map[my + 0] = String.Concat(map[my + 0].Select((c, i) => (i - m.Index).IsWithin(monsterPattern2) && monsterPattern2[i - m.Index] == '#' ? 'O' : c));
						map[my + 1] = String.Concat(map[my + 1].Select((c, i) => (i - m.Index).IsWithin(monsterPattern3) && monsterPattern3[i - m.Index] == '#' ? 'O' : c));
						++fullMatch;
					}
				}
				if (fullMatch > 0)
					break;
			}
			
			for (my = 0; map.Length > my; ++my)
				Debug.Write(map[my] + "\n");
			Console.WriteLine("#2: " + map.Select(r => r.Where(c => c == '#').Count()).Sum());
		}

		enum BorderOrientation
		{
			Top = 0,
			Right,
			Bottom,
			Left,
		}

		static string StandardizeBorder(string border)
		{
			string reversed = String.Concat(border.Reverse());
			return 0 > border.CompareTo(reversed) ? border : reversed;
		}

		static string GetColumnString(string[] body, int column)
		{
			return String.Concat(Enumerable
					.Range(0, body.Length)
					.Select(i => body[body.Length - i - 1][column]));	// Start from the bottom since rotation is done clockwise
		}

		static string GetBorderString(string[] body, int border)
		{
			switch (border % 4)
			{
				case 0: return body[0];									// Top = 0,
				case 1: return GetColumnString(body, body.Length - 1);	// Right,
				case 2: return body[body.Length - 1];					// Bottom,
				case 3: return GetColumnString(body, 0);				// Left,
			}

			return "error";
		}

		static int RotationsRequired(int currentOrientation, int desiredOrientation)
		{
			return (desiredOrientation + 8 /* +4+4 to avoid negatives*/ - currentOrientation) % 4;
		}

		static string[] RotateStringsClockwise(string[] array)
		{
			string[] rot = (string[])array.Clone();
			for (int i = 0; rot.Length > i; ++i)
				rot[i] = GetColumnString(array, i);
			return rot;
		}

		static string[] FlipStringsHorizontaly(string[] array)
		{
			string[] flip = (string[])array.Clone();
			for (int l = 0; flip.Length > l; ++l)
				flip[l] = String.Concat(flip[l].Reverse());
			return flip;
		}

		public struct Tile
		{
			public int ID;
			public string[] Body;
			public string[] Borders;

			public Tile(int id, string[] body, string[] borders)
			{
				ID = id;
				Body = body;
				Borders = borders;
			}

			public Tile Flip(int alongEdge = 0)
			{
				if (alongEdge == 0 || alongEdge == 2)
				{
					string[] flipBorders = (string[])Borders.Clone();
					var temp = flipBorders[3];
					flipBorders[3] = flipBorders[1];
					flipBorders[1] = temp;
					return new Tile(ID, FlipStringsHorizontaly(Body), flipBorders);
				}
				else
				{
					// Horizontal flip + turn around = Vertical flip
					return Flip(0).Rotate(2);
				}
			}

			public Tile Rotate(int rotation)
			{
				rotation %= 4;
				if (0 == rotation)
					return this;
				string[] rotBorders = (string[])Borders.Clone();
				rotBorders[3] = Borders[2];
				rotBorders[2] = Borders[1];
				rotBorders[1] = Borders[0];
				rotBorders[0] = Borders[3];
				return new Tile(ID, RotateStringsClockwise(Body), rotBorders).Rotate(--rotation);
			}

			public Tile RotateToFace(Tile source, string matchingEdge, int faceTo)
			{
				// Rotate the matching edge of the next tile to face the previous
				int thisEdgeIndex = Array.IndexOf(Borders, matchingEdge);
				var result = Rotate(RotationsRequired(thisEdgeIndex, faceTo));
				// Check if the actual borders (not IDs) to see if the tile needs to be flipped
				bool flip =
					GetBorderString(result.Body, Array.IndexOf(result.Borders, matchingEdge)) !=
					GetBorderString(source.Body, Array.IndexOf(source.Borders, matchingEdge));
				return flip ? result.Flip(faceTo) : result;
			}

			public static Tile Parse(string s)
			{
				var splitUp = s.Split(':');
				var name = splitUp[0].Trim();
				var body = splitUp[1].Split("\r\n", StringSplitOptions.RemoveEmptyEntries);
				return new Tile(int.Parse(name[5..]), body, new string[] {
					StandardizeBorder(GetBorderString(body, 0)),		// Top = 0,
					StandardizeBorder(GetBorderString(body, 1)),		// Right,
					StandardizeBorder(GetBorderString(body, 2)),		// Bottom,
					StandardizeBorder(GetBorderString(body, 3)),		// Left
				});
			}
		}

		static string test = @"
Tile 2311:
..##.#..#.
##..#.....
#...##..#.
####.#...#
##.##.###.
##...#.###
.#.#.#..##
..#....#..
###...#.#.
..###..###

Tile 1951:
#.##...##.
#.####...#
.....#..##
#...######
.##.#....#
.###.#####
###.##.##.
.###....#.
..#.#..#.#
#...##.#..

Tile 1171:
####...##.
#..##.#..#
##.#..#.#.
.###.####.
..###.####
.##....##.
.#...####.
#.##.####.
####..#...
.....##...

Tile 1427:
###.##.#..
.#..#.##..
.#.##.#..#
#.#.#.##.#
....#...##
...##..##.
...#.#####
.#.####.#.
..#..###.#
..##.#..#.

Tile 1489:
##.#.#....
..##...#..
.##..##...
..#...#...
#####...#.
#..#.#.#.#
...#.#.#..
##.#...##.
..##.##.##
###.##.#..

Tile 2473:
#....####.
#..#.##...
#.##..#...
######.#.#
.#...#.#.#
.#########
.###.#..#.
########.#
##...##.#.
..###.#.#.

Tile 2971:
..#.#....#
#...###...
#.#.###...
##.##..#..
.#####..##
.#..####.#
#..#.#..#.
..####.###
..#.#.###.
...#.#.#.#

Tile 2729:
...#.#.#.#
####.#....
..#.#.....
....#..#.#
.##..##.#.
.#.####...
####.#.#..
##.####...
##..#.##..
#.##...##.

Tile 3079:
#.#.#####.
.#..######
..#.......
######....
####.#..#.
.#...#.##.
#.#####.##
..#.###...
..#.......
..#.###...";
		static string input = @"
Tile 3209:
.#####.#..
.....###..
#........#
....#.#...
..#...####
......#...
#........#
#.##.....#
#..#.#....
..##.###.#

Tile 2213:
##.#.#..#.
##.....#..
#..##.##..
#.....###.
#....#....
..........
....#.#..#
#.........
..##....#.
...#.###..

Tile 1277:
##.##...##
#..#.#..##
#.....#.##
##..##....
...#....##
#####..#..
#.#..#.###
...#....#.
#...#..###
#.#...##.#

Tile 2131:
#..###.##.
.........#
..#.......
..#...#.##
...#...#.#
#.#.......
..#..#...#
.....#...#
.##.#.....
.##.....#.

Tile 3911:
#.....####
..........
...#......
..#...####
#....#....
...#....#.
..........
#.#.......
#...#...##
#..#.#.###

Tile 3767:
...#...##.
#......#..
..#....#..
..........
.....#.#.#
#....#.#.#
.#...#...#
..........
#.........
.....#.###

Tile 2741:
#...######
#.....#.##
.....#..#.
#.##....##
##.#..#...
.#...#.##.
.#....##.#
..#...#..#
#.##.....#
.....#....

Tile 2591:
.#####...#
..###....#
#........#
...#....#.
...##....#
.##..#..#.
#..##....#
...#.....#
#.#..#..#.
#.##.....#

Tile 1733:
##.#...###
.......#..
..#....#.#
#.#.#...##
....#.....
##.#.....#
......#.##
.....#...#
......#.##
.##...#.#.

Tile 1823:
.##..##..#
##..#..###
......##.#
..........
#####.....
.#.##...#.
.#....#..#
.......#..
#.#..#.###
..#.####.#

Tile 2341:
#.....###.
.##.##....
##....##..
#.....#..#
.##......#
###.......
...#.....#
#.##...#..
.....##..#
...###..##

Tile 2657:
####.##.##
#.....#..#
#...#....#
...#.#....
....##...#
..#.#.....
..#.#.#...
...##.####
#.##.#..##
#.#.####.#

Tile 2503:
.##.#...##
.#.#..#..#
..........
..#......#
##..#....#
#.....#.##
#....#...#
#.##..##..
##.....##.
#..###..#.

Tile 1103:
.##....###
..........
........##
#..#.....#
#...#....#
........#.
.....#...#
#.......##
..#.....##
..####.###

Tile 3541:
###.####..
#....#...#
..#..#...#
#..#..###.
##.....#.#
#..#.##...
......#...
..#.....#.
....#.#...
#...###..#

Tile 1741:
#......##.
.##..#....
#........#
....###...
....#..#..
.....#.#..
#...#.#..#
.#...#.#..
...#..##..
#.#..##.#.

Tile 3529:
###..#...#
#...#...##
#....#...#
#..#....#.
.#..#....#
..#..#...#
....#....#
......#...
#...#.#..#
##....#...

Tile 1907:
...#....##
..........
..#.#....#
#...#.#..#
...###....
#..##....#
.#.#..###.
..#..#..#.
.....#....
#..#.....#

Tile 1087:
.#..##.##.
....#.....
#...##...#
.....#....
.....#.#..
#......#.#
#....##...
..#......#
.....#.#..
#..##.#.##

Tile 1367:
#..#.##...
#.#......#
..........
......##.#
#.##.##..#
###..##...
##....#..#
..##..##.#
.#........
.###.##...

Tile 1097:
.####...#.
##....####
...#.....#
#......#.#
.......#.#
....#.....
#.#.....#.
.#..#..#.#
....#.#...
...###.###

Tile 3853:
.####...##
#..#.....#
.#......#.
.........#
........##
###..#....
....#...##
#....#.#..
#.......#.
##.#..##.#

Tile 1861:
##..##.###
#..#......
..........
.#..##.#..
##.#.##...
#..#.....#
.#.#..#...
#........#
...#.....#
######..##

Tile 3517:
###..#..##
#.......#.
.........#
#.#..#...#
##....#...
#.........
.#.#...#.#
.......#..
....##...#
.#####.#.#

Tile 1951:
....###.##
#....#....
##.....##.
#...#..#..
#....##...
##.#......
#...##.#.#
###.....##
.#..#.#...
.#.####..#

Tile 3061:
#..#.#####
#.......#.
#.#.##....
.#..#.#..#
#....###..
#......#.#
.#.#....#.
#.........
.....#....
#####.##..

Tile 1319:
#..#.....#
#.##......
..###....#
#...#.#.##
.#.#.....#
#....#...#
#...#.#..#
#..#.....#
....#....#
.#...###..

Tile 2927:
.#..##...#
#....#...#
..#.#..#.#
#..#....##
#.......#.
......###.
..#.......
#.#.......
#..##...##
###....#..

Tile 2711:
##.#....##
#.........
#..#....##
....#..#.#
#......#.#
.....##.#.
#.###....#
.#....#.##
.#..#...#.
###.#..#.#

Tile 3677:
###....#.#
#.........
.....##...
#........#
.#.#.##..#
..##......
##......##
#.##......
.....#.#.#
.#..#.#..#

Tile 3361:
#.#######.
##.##.#.#.
###.#.....
.....#.#.#
.........#
...#......
#.##.....#
#..#....#.
.....#...#
.....####.

Tile 3407:
##.##.#.##
#..###...#
#....#....
.#.####...
..#..#...#
.##..##.##
##.#......
...#......
..........
.##.#.####

Tile 3673:
###..#.###
..#......#
#.....#...
.#.......#
....#...#.
..#...#.#.
###...#..#
#.##.....#
##..###..#
...#####.#

Tile 2351:
...#####..
#..#....##
.#...#...#
#.#.......
#.....##..
.......#..
...#....##
#.........
..#.#....#
..########

Tile 1171:
#.#.....#.
...###...#
..###.#.#.
...##..#.#
#...#..##.
.........#
..#.......
#.#.....##
....#.....
#####....#

Tile 1889:
.###..#...
#..#....##
###..#..##
...#..#..#
.#....##.#
..........
#.........
...#.....#
##........
.###...##.

Tile 2621:
##...####.
.........#
##......##
.##.....##
...##...##
#.#.....##
.#.#.#..#.
#..#..##.#
....#..##.
...##.###.

Tile 1129:
##...##.##
#.#...##.#
#.#.#..###
.#.....#.#
#...#.....
#........#
##...#....
#.#....###
#.##..#..#
.#......##

Tile 3863:
#.###.###.
#.........
##........
....#....#
###...#...
#......###
.#........
#..#.....#
.......#.#
..###....#

Tile 2039:
.##..#####
#.#....###
.....#....
.#....##..
#......#..
....#.#...
##...##..#
#.....#..#
......#..#
#.#..#.###

Tile 1847:
#..#..##.#
..........
####.....#
..........
##...#.#.#
..........
##....#..#
#....#...#
..##......
....#.####

Tile 1427:
#....#...#
#....##..#
#..#####..
#.#.#....#
..........
....#....#
##.......#
.....#...#
#.#..##..#
.#...#..##

Tile 2207:
#..#####.#
.##...#.#.
...#..#...
#...###...
##.......#
.....#....
.#...#...#
##.......#
##.#...#.#
##......#.

Tile 2393:
###..##.#.
#..#..#.#.
#.....#.#.
#..#......
........#.
.#.#....#.
....##.#..
###..#...#
#........#
.#..#.####

Tile 1493:
#.###.##.#
.#.##.##.#
.........#
..###.....
..#....###
.#.....#.#
.##......#
..#......#
##.....#.#
#.###..#.#

Tile 3709:
###.####.#
..#..#..#.
#..#...#..
.##.....#.
..#...#...
.........#
........##
........#.
.........#
#..#....##

Tile 3889:
#.#..##.#.
.#....#..#
...##..##.
#.....#...
#...##....
..##......
#.###.#...
......#...
.#.##.....
..###.##..

Tile 2029:
##..#.....
...###.#.#
....#...##
.........#
#....#...#
#........#
###.#.....
......###.
...##..#..
.#.#.#.#..

Tile 1699:
#.###..#.#
....##...#
....#....#
#.#.#...#.
##......##
#..#...###
..#...#.##
.......#..
#....#..##
#..#.##.##

Tile 2269:
####...##.
.###......
#.....#..#
#.#.#..#..
##..#.....
###..###.#
..........
........#.
##.##.#...
####...###

Tile 3373:
###..##..#
.......#..
.........#
#........#
......#...
...##..#..
#.#.....#.
##......##
..#.....##
.#.#.....#

Tile 1423:
##.###...#
...##...#.
..#..#..#.
##.###...#
#.#.....##
..#.......
#...#..#.#
#.....#...
..#.#.....
#.#..#.#.#

Tile 3137:
##...#...#
..#....#.#
#..#...###
##.#.#...#
......#...
.##.#....#
..##.#..#.
##.##....#
.##..##...
##.#..####

Tile 2381:
#.....##..
#....#....
#.#..#.#..
#.#....#..
#.#..#..##
##...#..#.
#.###....#
#..#..#..#
.#.#.#.#..
##..###.##

Tile 1151:
.#.#...#..
.##...#...
....#.#..#
#.#.##....
..........
#..####...
..#..#....
#.#...#..#
##..#.#...
.#.#..#..#

Tile 3797:
#...##.#.#
#...###...
##.#.##..#
##..#..#..
.#....#...
#.#.###...
#.....#...
##.....#..
#.#......#
.....#..##

Tile 2609:
.#...#.###
.....#....
#..#..#..#
.#......#.
......#...
.........#
#...#..#.#
#..##..#.#
##..#.#.##
.###....##

Tile 3251:
..#..##...
..........
....#.....
#.#.....#.
#.##...#..
#........#
#....##...
###...####
#.....##..
#.##...##.

Tile 2273:
####..###.
......#..#
#.#...#...
#..#.....#
........#.
........#.
####...#..
#.........
##..#....#
.##.###..#

Tile 2053:
####..###.
..........
...#......
.....#...#
#..#..#...
#....#...#
.#........
.........#
#.....#...
.#.###.#..

Tile 3623:
..#..#.###
#.#......#
#...#.....
#...#...#.
####..###.
##...##..#
......#.#.
#...###...
......#...
#.#..#####

Tile 3389:
...#..##..
...###....
..#......#
.#..##.#.#
.#..#.#...
##...#....
.....#.#..
##...#.#..
..#.......
..#.#.#...

Tile 3803:
.#.#.#.###
###.#....#
..#......#
#.#.......
#....#...#
##.......#
##.....#.#
##..#..#..
#.#####.#.
####.#....

Tile 1871:
.##..##.#.
#....#..##
..........
....#....#
##...#...#
#....#...#
##..###..#
##.#.#...#
........##
.....##..#

Tile 1021:
###...#..#
#.#.......
#..#......
###..#....
##...#.#.#
.#.###..#.
###.#...##
##...##..#
.#.#..#..#
#####.###.

Tile 2011:
..#.###..#
#......#.#
##.##..#..
.##..#...#
##.#..##.#
....##....
....#....#
#.....#...
#..#..#..#
##..######

Tile 2707:
#.###.#...
..........
.#.#...#..
...#.#...#
##..##...#
#...#....#
......#...
#...#.....
##...#...#
##.##..##.

Tile 3691:
##.#..#...
##......##
.#.......#
###..#..##
#..##....#
.##.#.....
..#....#.#
#..#.....#
#..#....#.
#####.#.#.

Tile 3449:
.#.##.#..#
#..##..#.#
#...#..###
##.......#
#.....#.##
....#.....
.........#
#..#.##..#
....#....#
...####..#

Tile 1667:
.#.####.##
...#.....#
..#..#....
.##.#.....
#.#.......
...#..#.#.
#...#....#
......#.##
#.##..#...
.#.####...

Tile 3319:
...#....#.
#.##..#.#.
#......#..
#...#.....
..###....#
#.#....#..
#........#
.........#
###......#
#...#...#.

Tile 1013:
....#...#.
#..#.#...#
#.........
#........#
#.#.......
#..#.#..#.
#.###...#.
...#.....#
.......##.
##.#.#.##.

Tile 2797:
..##.###..
.#.....#.#
#..#.#...#
##.#.#....
#..#....#.
##..#.##..
#.#..#....
#..#.#....
#.#..#...#
##.#...#.#

Tile 2347:
####.##.#.
##..#.#...
#.#.......
#..#..##..
.#..#...#.
#.#..###.#
.....##.##
.....#....
#....#....
#.#.#.##.#

Tile 3793:
..#..##.#.
.........#
...##....#
..........
..#....#.#
......#...
.#....#.##
...##..##.
#.....#...
.###......

Tile 1409:
.#.#......
#....#....
...#..#.#.
...#..#..#
#...#.....
......#...
#....#.#..
#.#......#
#.#.#..#.#
#####.#.#.

Tile 2141:
##...#.#..
...##....#
.#........
##.#...##.
..#.......
#..##....#
.##..#....
.###..###.
.....#.#.#
#..#...#.#

Tile 1697:
.###..##.#
...#.#..##
.#..#.####
####....##
#.#.......
.#...#....
#.....#...
.#.#..##..
.##....#.#
##.##.#.#.

Tile 1291:
#######..#
.##..#.#..
##.#...#.#
##.......#
.....##..#
#.#..#.#.#
...###.#.#
#.##......
#...#..#..
...###..#.

Tile 3023:
#.##.#..##
#......#..
#..#..##..
.#...#..##
#.#......#
#.#....#.#
.#..#.##..
.#....#..#
....#...#.
##.##.#...

Tile 1213:
...#.##.##
....#...##
#......#..
.........#
.........#
.#.##....#
#.....#..#
#........#
.....#..#.
###..###.#

Tile 1399:
#.###.####
##..###...
..##...#..
##...#.#.#
.........#
#...#.....
..##.....#
#.#.#.#..#
..........
##...#.#.#

Tile 2557:
##.#.#####
#....#..#.
#....##...
#.#.......
#.#..#....
..#....#..
..#..#..#.
##..#.##.#
##.......#
##....##..

Tile 1979:
....#..###
#.......#.
...#.....#
..#....#.#
#.....#...
...##....#
#.......##
....#...##
#.....#..#
#.###.#.##

Tile 1619:
#.#.#.##..
##.#......
.#........
..##.#...#
..........
#....#....
#.....##.#
##..#.#...
.##..#.###
...#.###..

Tile 2957:
#.#.###.##
....#.##.#
........##
#.#.#.....
#........#
#.....#...
...#...###
.#.......#
#.........
##..#..###

Tile 1933:
##.##..#.#
......#...
#.###....#
#...##...#
.....#...#
#........#
#....##..#
...#..#...
.......###
...#.###.#

Tile 3527:
...####.#.
.#....##..
##.##.###.
.....##.#.
...#.....#
.##.......
#..#.##...
.#.##.##..
.##...##.#
.###......

Tile 3821:
#....#.###
##.##.....
##.#......
#..#.#.#..
..#.#....#
#..#.#..#.
##....#..#
....#....#
...#...#..
##.##.###.

Tile 1549:
.###.#....
.##.#.....
..........
#......#..
..#...#..#
#.....#...
#.##.#.#.#
#.#.......
###....#.#
#..######.

Tile 3271:
#....#.##.
..........
...#......
#.#......#
#........#
##.......#
.........#
...#...#.#
#.....#.##
...#..#.##

Tile 3083:
.#####....
....#..#..
#.........
#.#.......
#.#......#
...#..#...
.##..#.###
#...#....#
.....#....
.#.#..####

Tile 2729:
.#..###.#.
#.#..##...
#..#......
.##....#.#
......#...
.....#.##.
.#...##..#
##..#..#.#
.#......##
#####.##..

Tile 1439:
.#..#.##.#
.#####...#
.....#...#
.#........
#........#
#........#
.........#
.......#.#
#.#....#.#
.#..######

Tile 1747:
#..#.#.#.#
#.........
#.....###.
#....#...#
##.....#..
#........#
........##
##.#..#.#.
#.#.#..##.
..#.##...#

Tile 2287:
####..#...
#........#
#..#..##.#
.....#.#..
#.#..#..#.
##...###.#
#..##.#.##
###...#...
....#....#
#..#.#.##.

Tile 3701:
.#.#####..
..##.#....
.........#
.........#
#......#..
###.......
.......#..
.#....#.##
##.#......
....#....#

Tile 3329:
###.##.#.#
#..#......
#.##......
..#.......
..........
..#......#
#..#......
##.###....
###.....##
#.#.##...#

Tile 3089:
.#..##.#.#
##.#.##..#
#.#.#.##..
.......###
#.##....##
#.....##.#
##....#...
##.#.....#
.###...#..
#.......##

Tile 3347:
.#.#..##.#
.........#
#.....#...
#.......##
.##.#....#
#.........
#.#..#....
.........#
#####..#.#
#.#...###.

Tile 1163:
.......###
#......#.#
.....#...#
#.........
##...#..#.
#...###..#
....#..#.#
#.........
..#......#
.##...##.#

Tile 3719:
.####.####
..#......#
#......#..
##....#.#.
##...#....
.#..#...#.
.....#...#
#........#
..#....#..
..#.#...##

Tile 2113:
##.##..#.#
#..#.#...#
....#..#..
....#.....
##...##...
#.......##
#..#.....#
.........#
##........
#....#...#

Tile 2027:
....#.....
......####
...#....#.
#.#......#
..#...#...
...##...#.
.#..#..#.#
#.#....#.#
#..#..#.#.
##..#.##.#

Tile 1777:
.#.#.##...
.#...##...
#...#..##.
#.#.#.....
.#.......#
..#.##...#
#.#.....##
........##
..........
.##....###

Tile 2857:
#.####.#.#
#....###..
..........
#.#.......
##.#....##
.#...#..#.
#.#.#...#.
#..#.....#
...#......
.#...##.##

Tile 2221:
##....###.
#........#
##.#....#.
#..##...#.
..#..##.#.
#.#.#..#.#
.....#####
##........
...#....#.
#..#######

Tile 2281:
.###.####.
#.#..#..#.
...##....#
#....#....
#..#......
..#......#
....#..##.
....##..##
..#..###..
#....#.#.#

Tile 1597:
#..#..#.##
##.......#
....#.#.#.
#......#..
.....##...
.........#
.......#..
#....#..#.
#........#
.#.#.#..##

Tile 1627:
#...#.##..
###.......
#.........
.......#..
..###..###
##.##.##.#
........#.
##......#.
#...#...##
..#...##.#

Tile 2339:
##..##.#.#
..#.#....#
..##.#....
..##..##..
...#.....#
#..#..#.##
....#.....
##.#.#....
...#......
...#.#.###

Tile 2161:
#..#.###..
#........#
...#.#....
.....#.#.#
.....#.##.
#...#..###
#.#...#..#
#.........
#........#
#..##..#..

Tile 2617:
#.....##..
..........
..#.##...#
##.##.....
..#......#
#..#..##..
####.#...#
##..#.....
.........#
#.....###.

Tile 2837:
#.#.######
...#.#...#
...##.....
#....#..##
.####..#.#
....#....#
#..#.....#
.#....#.##
#..#.#..##
...#####..

Tile 3917:
.....####.
..........
#..#.#.###
#........#
..........
.#.#...#..
...#....#.
#...#.....
...#...#..
##....#.#.

Tile 1223:
.##.#.##.#
.#....#..#
........#.
#.....#..#
#.#..###.#
.###...#.#
#....#.#.#
##.##..#..
.....###..
#.########

Tile 2579:
..#.##.###
##.......#
..#...#.#.
......#..#
#...#.....
...#.#...#
#.........
....#..#..
.........#
#.#.#....#

Tile 1451:
#.###..##.
..#......#
##....#...
.##...###.
.......#.#
#....#...#
#.#.......
##..#..###
##.#.##.#.
.#####...#

Tile 2683:
###..#....
#.......#.
#......#.#
.#.##...##
.#....#..#
.##....#.#
.#.......#
.....#..#.
#........#
.#.####..#

Tile 2467:
#####.####
.....#.#.#
#..#....#.
.......#.#
.......#.#
.......#..
#........#
......#..#
#.#.......
#..#..#.##

Tile 1361:
##.##....#
##.##.##.#
.........#
#..#.##.##
.....#....
.....#....
........##
.#.......#
###.......
#.####.##.

Tile 3019:
..##.###.#
###.......
.........#
.#....##.#
..#......#
#.........
#.#..#..##
........#.
..........
##.####..#

Tile 2081:
...#......
##...#....
##....#..#
#......###
###..##.##
..#...#.##
.#....##.#
.#..##....
##.#..##.#
..#...#.##

Tile 3923:
.##.#.#..#
#........#
...#.....#
#...#....#
....#.....
#......#..
.....#...#
###..#..##
#.......#.
#.###..##.

Tile 1811:
.######.##
##........
...#..#.##
#....#...#
..........
#.....#.#.
......#...
.##...#.#.
#.#.#.##.#
##.##..#..

Tile 1709:
..###.....
#..#.....#
...#..#..#
......#...
#......##.
##.#.##...
##.#.#....
........#.
###......#
.#.##.#..#

Tile 1181:
.##..#####
##....##..
......####
###....#.#
#.........
#........#
#.#..#.##.
#..##.#...
......#...
..##...###

Tile 3467:
..#......#
#...#..#..
.#.#......
##..#...#.
...##..#.#
#...###..#
#....##..#
.....#....
#...#.#.#.
##.#.##...

Tile 1787:
#..##.#...
...##.....
.#...####.
..#..#..#.
#.#.##..#.
.........#
##...#...#
........##
.....#.#..
#..##.###.

Tile 1231:
.#.....#.#
.#.#...###
#....#..#.
#.#.#.....
......#...
..#.......
#.#..###..
.##.#.#..#
....##...#
###.#.####

Tile 2377:
####.#.##.
.#.......#
..#..#.#.#
..#..#...#
.#......#.
#.#...#.#.
#.#..#...#
#....#....
......#..#
..##..#.##

Tile 1997:
.#...###..
.#..##..#.
...#..#...
...#..#...
##..#.#.##
#..##...##
.#..#....#
##.......#
#..#.#....
#.#.#.#.##

Tile 1289:
....###..#
.....#..##
#...#.##.#
#..#.....#
.#.......#
###....#.#
#..#..#..#
#....#.#..
#.#......#
...####.##

Tile 1093:
#..#.#####
.##..#....
.........#
.....##..#
#......###
..#..#...#
.#........
#........#
.#........
.#.#......

Tile 1609:
#####..###
.......##.
#...#..#..
#........#
#..#..#..#
.#........
..#.......
..#...#...
#.....#..#
#.###..###

Tile 3049:
#......#..
#...#..#..
....#...##
....##....
.....#....
..........
....##....
#...#....#
....#....#
##..####.#

Tile 1483:
###.....#.
#...##....
#.#.....##
#...#.....
#.....##..
..........
#....#...#
####......
#.......#.
.#####.###

Tile 3581:
##...#####
..........
.#.......#
......#...
..........
#..#....#.
##...#.##.
##.....###
#.#..#.#.#
#...######

Tile 2143:
....##..##
.........#
....##..#.
#......#..
...#......
........##
.#.#.....#
..........
##........
.#.####.##

Tile 1601:
...##..##.
...#......
..##....##
..##..#.#.
#.....##.#
##.....###
#.#.......
#.........
#.#..#....
#..###...#

Tile 3121:
..###.#..#
......#...
..#......#
........#.
.........#
.#......#.
#.#....#.#
....##....
....#..###
#.....#.#.

Tile 2909:
.##.....#.
#.........
.#.......#
.###......
#.##.#..##
#.#.#...#.
#.....##..
##.......#
##......#.
###.###.##

Tile 2477:
###.#..#..
##....#.##
.....#...#
#..#..##.#
....#....#
#........#
...#..#.##
##....#.##
#.#.......
#..#...#..

Tile 2267:
.##....#.#
#.....#...
#.....##..
#..#..##..
.#...#.#..
#....#..##
#....#.#..
...#..##..
.....##..#
#.##....##
";
	}

	public static class ValueExtension
	{

		/// <summary>
		/// Check if a value is within two inclusive values.
		/// </summary>
		public static bool IsWithin<T>(this T value, T inclusiveMin, T inclusiveMax)
			where T : struct, IComparable
		{
			Comparer<T> comparer = Comparer<T>.Default;
			return
				0 <= comparer.Compare(value, inclusiveMin) &&
				0 >= comparer.Compare(value, inclusiveMax);
		}

		/// <summary>
		/// Check if a value is within the array range.
		/// </summary>
		public static bool IsWithin(this int value, string s)
		{
			return
				s.Length > 0 &&
				value.IsWithin(0, s.Length - 1);
		}
	}
}
